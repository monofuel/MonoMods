<project name="Japura-Tribes" default="main" basedir=".">


	<property name="src.dir" location="src/" />
	<property name="build.dir" location="build/" />
	<property name="dist.dir" location="dist/" />
	<property name="docs.dir" location="docs/" />
	<property name="bin.dir" location="bin/" />

	<path id="compile.classpath">
		<fileset dir="${bin.dir}" includes="*.jar"/>
	</path>

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${docs.dir}" />
	</target>

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${docs.dir}" />
	</target>

	<target name="build" depends="init">
		<javac includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}" fork="yes" debug="true" >
			<classpath refid="compile.classpath"/>
		</javac>
	</target>

	<target name="docs" depends="build">
		<javadoc packagenames="MonoMods" sourcepath="${src.dir}" destdir="${docs.dir}">
			<classpath>
				<fileset dir="${bin.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
			<link href="http://jd.bukkit.org/rb/apidocs/"/>
			<fileset dir="${src.dir}">
				<include name="japura/*/*.java" />
			</fileset>
		</javadoc>
	</target>

	<target name="MonoBugs" depends="build">
		<manifestclasspath property="MonoBugs.classpath" jarfile="${dist.dir}/MonoBugs.jar">
			<classpath refid="compile.classpath"/>
     		</manifestclasspath>		
	        <jar destfile="${dist.dir}/MonoBugs.jar" basedir="${build.dir}"
		     defaultexcludes="yes" includes="japura/MonoBugs/*">
			<fileset file="${src.dir}/japura/MonoBugs/plugin.yml"/>
			<fileset file="${src.dir}/japura/MonoBugs/config.yml"/>
			<!-- ATM both monobugs and tribes load the entire driver into their jars. perhaps there is a more elegant solution? -->
			<zipgroupfileset dir="${bin.dir}" includes="mongo-java-driver-2.13.0-rc1.jar"/>
                        <manifest>
				<attribute name="Class-Path" value="${MonoBugs.classpath}"/>
                        </manifest>
                </jar>
        </target>


	<target name="MonoChat" depends="build">
		<manifestclasspath property="MonoChat.classpath" jarfile="${dist.dir}/MonoChat.jar">
			<classpath refid="compile.classpath"/>
     		</manifestclasspath>		
	        <jar destfile="${dist.dir}/MonoChat.jar" basedir="${build.dir}"
		     defaultexcludes="yes" includes="japura/MonoChat/*">
			<fileset file="${src.dir}/japura/MonoChat/plugin.yml"/>
			<fileset file="${src.dir}/japura/MonoChat/config.yml"/>

                        <manifest>
				<attribute name="Class-Path" value="${MonoChat.classpath}"/>
                        </manifest>
                </jar>
        </target>


	<target name="MonoCities" depends="build">
		<manifestclasspath property="MonoCities.classpath" jarfile="${dist.dir}/MonoCities.jar">
			<classpath refid="compile.classpath"/>
     		</manifestclasspath>		
	        <jar destfile="${dist.dir}/MonoCities.jar" basedir="${build.dir}"
		     defaultexcludes="yes" includes="japura/MonoCities/*">
			<fileset file="${src.dir}/japura/MonoCities/plugin.yml"/>
			<fileset file="${src.dir}/japura/MonoCities/config.yml"/>
                        <manifest>
				<attribute name="Class-Path" value="${MonoCities.classpath}"/>
                        </manifest>
                </jar>
        </target>


	<target name="MonoLocks" depends="build">
		<manifestclasspath property="MonoLocks.classpath" jarfile="${dist.dir}/MonoLocks.jar">
			<classpath refid="compile.classpath"/>
     		</manifestclasspath>		
	        <jar destfile="${dist.dir}/MonoLocks.jar" basedir="${build.dir}"
		     defaultexcludes="yes" includes="japura/MonoLocks/*">
			<fileset file="${src.dir}/japura/MonoLocks/plugin.yml"/>
			<fileset file="${src.dir}/japura/MonoLocks/config.yml"/>
                        <manifest>
				<attribute name="Class-Path" value="${MonoLocks.classpath}"/>
                        </manifest>
                </jar>
        </target>


	<target name="MonoMobs" depends="build">
		<manifestclasspath property="MonoMobs.classpath" jarfile="${dist.dir}/MonoMobs.jar">
			<classpath refid="compile.classpath"/>
     		</manifestclasspath>		
	        <jar destfile="${dist.dir}/MonoMobs.jar" basedir="${build.dir}"
		     defaultexcludes="yes" includes="japura/MonoMobs/*">
			<fileset file="${src.dir}/japura/MonoMobs/plugin.yml"/>
			<fileset file="${src.dir}/japura/MonoMobs/config.yml"/>
                        <manifest>
				<attribute name="Class-Path" value="${MonoMobs.classpath}"/>
                        </manifest>
                </jar>
        </target>


	<target name="MonoPerms" depends="build">
		<manifestclasspath property="MonoPerms.classpath" jarfile="${dist.dir}/MonoPerms.jar">
			<classpath refid="compile.classpath"/>
     		</manifestclasspath>		
	        <jar destfile="${dist.dir}/MonoPerms.jar" basedir="${build.dir}"
		     defaultexcludes="yes" includes="japura/MonoPerms/*">
			<fileset file="${src.dir}/japura/MonoPerms/plugin.yml"/>
			<fileset file="${src.dir}/japura/MonoPerms/config.yml"/>
                        <manifest>
				<attribute name="Class-Path" value="${MonoPerms.classpath}"/>
                        </manifest>
                </jar>
        </target>


	<target name="NoWither" depends="build">
		<manifestclasspath property="NoWither.classpath" jarfile="${dist.dir}/NoWither.jar">
			<classpath refid="compile.classpath"/>
     		</manifestclasspath>		
	        <jar destfile="${dist.dir}/NoWither.jar" basedir="${build.dir}"
		     defaultexcludes="yes" includes="japura/NoWither/*">
			<fileset file="${src.dir}/japura/NoWither/plugin.yml"/>
			<fileset file="${src.dir}/japura/NoWither/config.yml"/>
                        <manifest>
				<attribute name="Class-Path" value="${NoWither.classpath}"/>
                        </manifest>
                </jar>
        </target>


	<target name="Tribes" depends="build">
		<manifestclasspath property="Tribes.classpath" jarfile="${dist.dir}/Tribes.jar">
			<classpath refid="compile.classpath"/>
     		</manifestclasspath>		
	        <jar destfile="${dist.dir}/Tribes.jar" basedir="${build.dir}"
		     defaultexcludes="yes" includes="japura/Tribes/*">
			<fileset file="${src.dir}/japura/Tribes/plugin.yml"/>
			<fileset file="${src.dir}/japura/Tribes/config.yml"/>
			<!-- ATM both monobugs and tribes load the entire driver into their jars. perhaps there is a more elegant solution? -->
			<zipgroupfileset dir="${bin.dir}" includes="mongo-java-driver-2.13.0-rc1.jar"/>
                        <manifest>
				<attribute name="Class-Path" value="${Tribes.classpath}"/>
                        </manifest>
                </jar>
        </target>


	<!--<target name="main" depends="build,MonoBugs,MonoChat,MonoCities,MonoLocks,MonoMobs,MonoPerms,NoWither,Tribes,docs">-->
	<target name="main" depends="build,MonoBugs,MonoChat,MonoCities,MonoLocks,MonoMobs,MonoPerms,NoWither,Tribes,docs">
		<description> Main target</description>
	</target>

</project>
